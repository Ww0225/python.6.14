# 题目描述
# 小蓝在一个行m列的方格图中玩一个游戏。
# 开始时，小蓝站在方格图的左上角，即第1行第1列。
# 小蓝可以在方格图上走动，走动时，如果当前在第？行第c列，他不
# 能走到行号比？小的行，也不能徒到列号比c小的列。同时，他一步走的直线距离不超过3。
# 例如，如果当前小蓝在第3行第5列，他下一步可以走到第3行第6
# 列、第3行第7列、第3行第8列、第4行第5列、第4行第6列、第4行第7列、第5行第5列、第5行第6列、第6行第5列之一。
# 小蓝最终要走到第n行第m列。
# 在图中，有的位置有奖励，走上去即可获得，有的位置有惩罚，走上
# 去就要接受惩罚。奖励和惩罚最终抽象成一个权值，奖励为正，惩罚为负。
# 小蓝希望，从第1行第1列走到第n行第m列后，总的权值和最大。请问最大是多少？
# 输入描述
# 输入的第一行包含两个整数n,m,表示图的大小。
# 接下来n行，每行m个整数，表示方格图中每个点的权值。
# 其中，1≤n≤100，-104≤权值≤104。
# 输出描述
# 输出一个整数，表示最大权值和。
n,m = map(int,input().split())
dp = [list(map(int,input().split())) for _ in range(n)]
dir = [(0,1),(0,2),(0,3),(1,0),(1,1),(1,2),(2,0),(2,1),(3,0)]
for x in range(n):
    for y in range(m):
        res = []
        for dx,dy in dir:
            lx = x - dx
            ly = y - dy
            if lx >= 0 and ly >= 0 and lx < n and ly < n:
                res.append(dp[lx][ly])
        if len(res)!=0:
            dp[x][y] += max(res)
print(dp[-1][-1])